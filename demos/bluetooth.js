const SERVICE_UUID="000018f0-0000-1000-8000-00805f9b34fb",WRITE_CHATT_UUID="00002af1-0000-1000-8000-00805f9b34fb",NOTIFY_CHATT_UUID="xxxxxxxx";let selectedDevice,writeChatt,notifyChatt;const send=t=>{if(!writeChatt)return void console.log("无法打印：打印特性属性为空");const e=(new TextEncoder).encode(t);return writeChatt.writeValue(e).then((()=>{console.log("发送完毕")}))},read=t=>new Promise((async(e,n)=>{let a;await send(t),await notifyChatt.startNotifications(),notifyChatt.addEventListener("characteristicvaluechanged",(async t=>{a&&clearTimeout(a);const n=t.target.value;e(n),await notifyChatt.stopNotifications()})),a=setTimeout((()=>{n(new Error("Timeout"))}),5e3)})),initBle=async()=>selectedDevice?writeChatt&&notifyChatt?Promise.resolve({writeChatt,notifyChatt}):Promise.resolve(selectedDevice).then((t=>(console.log(`设备名称 ${t.name}`),console.log("连接到 GATT 服务器......"),t.gatt.connect()))).then((t=>t.getPrimaryService(SERVICE_UUID))).then((async t=>(writeChatt=await t.getCharacteristic(WRITE_CHATT_UUID),notifyChatt=await t.getCharacteristic(WRITE_CHATT_UUID),{writeChatt,notifyChatt}))):Promise.reject(new Error("没有配对设备")),handleSend=()=>{initBle().then((()=>{send("SELFTEST\r\n")})).catch((t=>{console.log("发送指令失败：",t.message)}))},pair=async()=>navigator.bluetooth.requestDevice({filters:[{services:[SERVICE_UUID]}]}).then((t=>(selectedDevice=t,t))).catch((t=>(console.log(t.message),""))),handleConnect=async()=>{const t=await pair();console.log("配对设备：",t)},init=()=>{document.getElementById("connectBtn").addEventListener("click",handleConnect),document.getElementById("sendBtn").addEventListener("click",handleSend)};init();