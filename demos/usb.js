let selectedDevice;const getEndpoint=e=>{let n,t;for(const{alternates:i}of e.configuration.interfaces){const e=i[0],c=7;if(e.interfaceClass===c)for(const i of e.endpoints)"bulk"===i.type&&("in"===i.direction?n=i.endpointNumber:"out"===i.direction&&(t=i.endpointNumber))}return{inEndpoint:n,outEndpoint:t}},connect=async()=>{let e=await getDevice();e&&(selectedDevice=e,await initDevice(e))},getDevice=async()=>await navigator.usb.requestDevice({filters:[{classCode:7}]}).then((e=>e)).catch((()=>null)),initDevice=async e=>{await e.open();const{configurationValue:n,interfaces:t}=e.configuration;await e.selectConfiguration(n||0),await e.claimInterface(t[0].interfaceNumber||0)},sendCmd=async()=>{if(!selectedDevice)return void console.warn("请先配对设备");const e=new Uint8Array([31,27,31,103,0]),{outEndpoint:n}=getEndpoint(selectedDevice);selectedDevice.transferOut(n,e)},init=()=>{navigator.usb.addEventListener("connect",(e=>{console.log("新连上的设备",e.device)})),navigator.usb.addEventListener("disconnect",(e=>{console.log("断开的设备",e.device)})),document.querySelector("#connectBtn").addEventListener("click",connect),document.querySelector("#sendBtn").addEventListener("click",sendCmd)};document.addEventListener("DOMContentLoaded",init);