const stage=document.getElementById("stage"),gl=stage.getContext("webgl"),vertex="\n  attribute vec2 position;\n  varying vec3 color;\n\n  void main() {\n    gl_PointSize = 1.0;\n    color = vec3(0.5 + position * 0.5, 0.0);\n    gl_Position = vec4(position * 0.5, 1.0, 1.0);\n  }\n",vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertex),gl.compileShader(vertexShader);const fragment="\n  precision mediump float;\n  varying vec3 color;\n\n  void main() {\n    gl_FragColor = vec4(color, 1.0);\n  }\n",fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragment),gl.compileShader(fragmentShader);const program=gl.createProgram();gl.attachShader(program,vertexShader),gl.attachShader(program,fragmentShader),gl.linkProgram(program),gl.useProgram(program);const points=new Float32Array([-1,-1,0,1,1,-1]),bufferId=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferId),gl.bufferData(gl.ARRAY_BUFFER,points,gl.STATIC_DRAW);const vPosition=gl.getAttribLocation(program,"position");gl.vertexAttribPointer(vPosition,2,gl.FLOAT,!1,0,0),gl.enableVertexAttribArray(vPosition),gl.clear(gl.COLOR_BUFFER_BIT),gl.drawArrays(gl.TRIANGLE_STRIP,0,points.length/2);